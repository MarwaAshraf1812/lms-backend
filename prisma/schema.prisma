generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  username      String
  email     String   @unique
  role      Role
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  courses   Course[]
  enrollments Enrollment[]
}

model Course {
  id          String   @id @default(uuid())
  title       String
  category    String
  level       String
  language    String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  modules     Module[]
  createdBy   User     @relation(fields: [createdById], references: [id])
  createdById String
  enrollments Enrollment[]
}

model Module {
  id        String   @id @default(uuid())
  title     String
  content   String
  order     Int
  course    Course   @relation(fields: [courseId], references: [id])
  courseId  String
  createdAt DateTime @default(now())
}

model Enrollment {
  id       String   @id @default(uuid())
  user    User     @relation(fields: [userId], references: [id])
  userId   String
  course   Course   @relation(fields: [courseId], references: [id])
  courseId String
  createdAt DateTime @default(now())

  @@unique([userId, courseId])
}

model AIResponse {
  id String @id @default(uuid())
  type String // quiz, summary, etc.
  topic String?
  prompt String @db.Text
  response Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  STUDENT
  TEACHER
  ADMIN
}