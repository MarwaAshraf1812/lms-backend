generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  username      String
  email     String   @unique
  role      Role
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  courses   Course[]
  enrollments Enrollment[]
  ratings   CourseRating[]
}
model Category {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  courses   Course[]
} 
model Course {
  id          String   @id @default(uuid())
  title       String
  level       String
  language    String
  description String
  hidden      Boolean  @default(false)
  rate        Float    @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  modules     Module[]
  createdBy   User     @relation(fields: [createdById], references: [id])
  createdById String
  enrollments Enrollment[]
  categoryId  String
  category    Category @relation(fields: [categoryId], references: [id])
  ratings     CourseRating[]
}

model CourseRating {
  id        String   @id @default(uuid())
  rating    Int
  comment   String?
  course    Course   @relation(fields: [courseId], references: [id])
  courseId  String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())

  @@unique([userId, courseId])
}

model Module {
  id        String   @id @default(uuid())
  title     String
  order     Int
  course    Course   @relation(fields: [courseId], references: [id])
  courseId  String
  createdAt DateTime @default(now())
  moduleContent ModuleContent[]
}
enum ContentType {
  text
  video
  image
  pdf
}

model ModuleContent {
  id        String   @id @default(uuid())
  type      ContentType
  data      String?
  url       String?
  alt       String?
  title     String?
  module    Module   @relation(fields: [moduleId], references: [id])
  moduleId  String
  createdAt DateTime @default(now())
}


model Enrollment {
  id       String   @id @default(uuid())
  user    User     @relation(fields: [userId], references: [id])
  userId   String
  course   Course   @relation(fields: [courseId], references: [id])
  courseId String
  createdAt DateTime @default(now())

  @@unique([userId, courseId])
}

model AIResponse {
  id String @id @default(uuid())
  type String // quiz, summary, etc.
  topic String?
  prompt String @db.Text
  response Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  STUDENT
  INSTRUCTOR
  ADMIN
}